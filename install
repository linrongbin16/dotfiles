#!/bin/bash

# set -x

OS="$(uname -s)"

export DOTFILES_HOME="$HOME/.dotfiles"

. "$DOTFILES_HOME/inst/util.sh"

core_deps() {
  case "$OS" in
  Linux)
    if [ -f "/etc/arch-release" ] || [ -f "/etc/artix-release" ]; then
      . "$DOTFILES_HOME/inst/pacman.sh"
    elif [ -f "/etc/fedora-release" ] || [ -f "/etc/redhat-release" ]; then
      . "$DOTFILES_HOME/inst/dnf.sh"
    else
      . "$DOTFILES_HOME/inst/apt.sh"
    fi
    ;;
  Darwin)
    . "$DOTFILES_HOME/inst/brew.sh"
    ;;
  *)
    info "$OS is not supported, exit..."
    exit 1
    ;;
  esac
}

git_configs() {
  git config --global user.email "linrongbin16@outlook.com"
  git config --global user.name "linrongbin16"
  git config --global pull.rebase false
  git config --global init.defaultBranch main
}

js_deps() {
  install "curl -fsSL https://deno.land/install.sh | sh -s -- -y" "deno"
  install "curl -fsSL https://bun.com/install | bash" "bun"
}

install_go() {
  git clone --depth=1 https://github.com/kerolloz/go-installer
  export GOROOT="$HOME/.go" # where go is installed
  export GOPATH="$HOME/go"  # user workspace
  bash ./go-installer/go.sh
  export PATH="$PATH:$GOROOT/bin"
  export PATH="$PATH:$GOPATH/bin"
}

install_fzf() {
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
  ~/.fzf/install --bin
  sudo cp ~/.fzf/bin/fzf /usr/local/bin/fzf
  fzf --version
}

go_deps() {
  install "install_go" "go"
  install "install_fzf" "fzf"
  install "go install github.com/jesseduffield/lazygit@latest" "lazygit"
  install "go install github.com/noborus/ov@latest" "ov"
  install "go install github.com/walles/moar@latest" "moar"
  install "go install github.com/umlx5h/gtrash@latest" "gtrash"
}

# rust
rust_deps() {
  install "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y" "cargo"
  install "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y" "rustc"
  if [ -f $HOME/.cargo/env ]; then
    . "$HOME/.cargo/env"
  fi
  install "cargo install fd-find" "fd"
  install "cargo install ripgrep" "rg"
  install "cargo install --locked bat" "bat"
  install "cargo install eza" "eza"
  install "cargo install --locked zoxide" "zoxide"
  install "cargo install --locked rmz" "rmz"
  install "cargo install --locked cpz" "cpz"
}

neovim_deps() {
  install "cargo install --git https://github.com/MordechaiHadad/bob --locked" "bob"
  export PATH="$PATH:$HOME/.local/share/bob/nvim-bin"
  install "bob use stable" "nvim"
}

prompt_deps() {
  # git-prompt
  if [ ! -d "$HOME/.zsh" ]; then
    mkdir -p "$HOME/.zsh"
  fi
  if [ ! -d "$HOME/.zsh/agkozak-zsh-prompt" ]; then
    git clone --depth=1 https://github.com/woefe/git-prompt.zsh $HOME/.zsh/git-prompt.zsh
  fi

  # atuin
  install "curl --proto '=https' --tlsv1.2 -LsSf https://setup.atuin.sh | sh" "atuin"

  # mise
  install "curl https://mise.run | sh" "mise"
}

alacritty_configs() {
  if [ ! -d "$HOME/.config/alacritty" ]; then
    mkdir -p $HOME/.config/alacritty
  fi
  if [ ! -f ~/.config/alacritty/alacritty.toml ]; then
    cp $HOME/.dotfiles/alacritty.toml $HOME/.config/alacritty/alacritty.toml
  fi
  if [ ! -d "$HOME/.config/alacritty/themes" ]; then
    git clone --depth=1 https://github.com/alacritty/alacritty-theme ~/.config/alacritty/themes
  fi
}

profile_configs() {
  echo '' >>~/.zshrc
  echo '# dotfiles ' >>~/.zshrc
  echo '[ -f ~/.dotfiles/dotfiles.zsh ] && source ~/.dotfiles/dotfiles.zsh' >>~/.zshrc
  info "done"
}

main() {
  core_deps
  js_deps
  go_deps
  rust_deps
  neovim_deps
  prompt_deps
  git_configs
  alacritty_configs
  profile_configs
}

main
