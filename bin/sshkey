#! /usr/bin/env python3
# -*- coding:utf-8 -*-
# Copyright 2018-  <linrongbin16@gmail.com>

import os
import sys

import click


def debug(msg):
    print(f"[sshkey] (Debug) {msg}")


def info(msg):
    print(f"[sshkey] {msg}")


def err(msg):
    print(f"[sshkey] Error! {msg}")


def unknown_option():
    err(f"unknown option, please try `{sys.argv[0]} --help` for more information.")


@click.command()
@click.option(
    "-e",
    "--email",
    "email_opt",
    required=True,
    help="generate ssh key with email",
)
@click.option("--debug", "debug_opt", is_flag=True, help="debug")
def sshkey(email_opt, debug_opt):
    """
    SSH key generator

    It helps generate the `~/.ssh/id_rsa` and `~/.ssh/id_rsa.pub` with 4096 RSA method, implemented via below commands:

    \b
    ```
    $ ssh-keygen -t rsa -b 4096 -C '{your_email}'
    $ touch ~/.ssh/authorized_keys
    $ chmod -R 700 ~/.ssh
    $ chmod 600 ~/.ssh/authorized_keys
    $ chmod 600 ~/.ssh/id_rsa
    $ chmod 600 ~/.ssh/id_rsa.pub
    ```"""
    if debug_opt:
        debug(f"email_opt:{email_opt}, debug_opt:{debug_opt}")
    os.system(f"ssh-keygen -t rsa -b 4096 -C '{email_opt}'")
    os.system("touch ~/.ssh/authorized_keys")
    os.system("chmod -R 700 ~/.ssh")
    os.system("chmod 600 ~/.ssh/authorized_keys")
    os.system("chmod 600 ~/.ssh/id_rsa")
    os.system("chmod 600 ~/.ssh/id_rsa.pub")


if __name__ == "__main__":
    sshkey()
